*** Settings ***
#Library  lib.Standard
#Library  lib.AuthenticationLibrary
#Library  lib.AxisServiceClient
#Library  lib.ProxyServiceAdminLibrary
#Library  lib.Test
Resource  taflibrary.txt

*** Test Cases ***
	
Loging to ESB
	${cook}=	Login As  admin-admin 			#logging as admin 
	Log	${cook}												#print the session cookie
	
Add Proxy Echo	
	init ProxyServiceAdmin														           #init service
	${data}=	create Proxy Data  echo  http://localhost:8080/axis2/services/echo?wsdl
	add Proxy  ${data}   #adding proxy
	#Assert addProxy  unsuccessful								           #assert
	Assert addProxy  successful
	
echo Payload Test
	invoke Operation In  echo  echoString  in  HelloWorld			#invoke operation	
	Assert InvokeOperation  HelloWorld								#assert output
	invoke Operation In  echo  echoInt  in  123	
	Assert Invoke Operation  123
	${out}	invoke Operation In  echo  echoStringArrays  a  AA  b  BB  c  11
	Log	${out}
		
echo Payload Test2
	set ServiceName  echo
	set ServiceOperation  echoString
	set ServiceParas  in  HelloWorld
	${o}=	Invoke Operation
	assertNotNull  ${o}
	Assert InvokeOperation  HelloWorld
	
	set ServiceName  echo
	set ServiceOperation  echoInt
	set ServiceParas  in  123
	${o}=	Invoke Operation
	assertNotNull  ${o}
	Assert InvokeOperation  123
	
	set ServiceName  echo
	set ServiceOperation  echoStringArrays
	set ServiceParas  a  AA
	set ServiceParas  b  BB
	set ServiceParas  c  123
	${o}=	Invoke Operation
	assertNotNull  ${o}
	#${a}=	get Response Attribute Value  a_r
	#assertNotNull  ${a}
	#${b}=	get Response Attribute Value  b_r
	#assertNotNull  ${b}
	#${c}=	get Response Attribute Value  c
	#assertNotNull  ${c}
	
Add Proxy Cal
	${data}=	create Proxy Data  Adcal  http://localhost:8080/axis2/services/AdvancedCalculator?wsdl
	add Proxy  ${data}   #adding proxy
	#Assert addProxy  unsuccessful								           #assert
	Assert addProxy  successful
	
Cal Payload test
	${arr}	create Array  1  2  3  4  5  6
	invoke Operation In  Adcal  getArrayLength  arr  ${arr}
	Assert InvokeOperation  6
	${arr}=	invoke Operation In  Adcal  getArray
	Assert Array Length  ${arr}  10
	Assert InvokeOperation  ruks_0  ruks_1  ruks_2  ruks_3  ruks_4  ruks_5  ruks_6  ruks_7  ruks_8  ruks_9
	
Test Sample
	${data}=	create Proxy Data  quote  http://localhost:8080/axis2/services/SimpleStockQuoteService?wsdl
	add Proxy  ${data}
	#Assert addProxy  unsuccessful
	Assert addProxy  successful								          
	invoke Operation In  quote  getSimpleQuote  symbol  rukshan
	# Assert InvokeOperation  rukshan	
	
Delete Service
	delete Proxy Service  Adcal
	Assert deleteProxyService  successful 
	delete Proxy Service  quote
	Assert deleteProxyService  successful
	delete Proxy Service  echo
	Assert deleteProxyService  successful

